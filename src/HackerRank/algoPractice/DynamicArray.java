package HackerRank.algoPractice;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class DynamicArray {

	// create n db array
	public static List<Integer> dynamicArray(int n, List<List<Integer>> queries) 
	{	
		int lastAnswer = 0;
		List<Integer> sequence;
		List<Integer> out = new ArrayList<Integer>();
		
		List<Integer>[] seqs = new List[n];
			
		for(int i = 0; i<n ; i++)
			seqs[i] = new ArrayList<Integer>(); 
		
		for(List<Integer> query : queries)
		{
			int type = query.get(0);
			int x = query.get(1);
			int y = query.get(2);
			int seq = (x^lastAnswer)%n;
			
			switch(type)
			{
				case 1:					
					sequence = seqs[seq];
					sequence.add(y);
					break;
				case 2:
					sequence = seqs[seq];
					lastAnswer = seqs[seq].get(y%n);
					System.out.println(lastAnswer);
					out.add(lastAnswer);
					break;
			}
		}
		
		return out;
	}
	
	public static void main(String[] args) {
		
		List<List<Integer>> queries = Arrays.asList(
												Arrays.asList(1,0,5),
												Arrays.asList(1,1,7),
												Arrays.asList(1,0,3),
												Arrays.asList(2,1,0),
												Arrays.asList(2,1,1));

		dynamicArray(2, queries);
		
		System.out.println();
	}

	static void doSMTG()
	{
		String in = 
				"1 345255357 205970905\r\n" + 
				"1 570256166 75865401\r\n" + 
				"1 94777800 645102173\r\n" + 
				"1 227496730 16649450\r\n" + 
				"1 82987157 486734305\r\n" + 
				"1 917920354 757848208\r\n" + 
				"1 61379773 817694251\r\n" + 
				"1 330547128 112869154\r\n" + 
				"1 328743001 855677723\r\n" + 
				"1 407951306 669798718\r\n" + 
				"1 21506172 676980108\r\n" + 
				"1 49911390 342109400\r\n" + 
				"1 980306253 305632965\r\n" + 
				"2 736380701 402184046\r\n" + 
				"2 798108301 416334323\r\n" + 
				"1 254839279 1370035\r\n" + 
				"1 109701362 2800586\r\n" + 
				"1 374257441 165208824\r\n" + 
				"1 624259835 477431250\r\n" + 
				"1 629066664 454406245\r\n" + 
				"1 135821145 763845832\r\n" + 
				"1 480298791 138234911\r\n" + 
				"1 553575409 835718837\r\n" + 
				"1 13022848 624652920\r\n" + 
				"1 974893519 882630870\r\n" + 
				"1 137832930 216177975\r\n" + 
				"1 453349691 969255659\r\n" + 
				"1 138396076 91038209\r\n" + 
				"1 699822497 941751038\r\n" + 
				"1 116800806 64071662\r\n" + 
				"1 815273934 8835809\r\n" + 
				"1 658534867 657771609\r\n" + 
				"1 183760807 179377441\r\n" + 
				"1 93984556 636425656\r\n" + 
				"1 231506463 836238924\r\n" + 
				"1 214074594 709571211\r\n" + 
				"1 649641434 509698468\r\n" + 
				"2 523656673 709717705\r\n" + 
				"2 261443586 330808140\r\n" + 
				"1 75924023 449768243\r\n" + 
				"1 849537714 354568873\r\n" + 
				"2 641743742 124196560\r\n" + 
				"1 19829224 995759639\r\n" + 
				"1 244389335 108315212\r\n" + 
				"1 877758467 421383626\r\n" + 
				"1 573278148 474192994\r\n" + 
				"2 561031511 448889978\r\n" + 
				"1 773294404 980994962\r\n" + 
				"2 33088709 716646168\r\n" + 
				"1 760927835 441983538\r\n" + 
				"1 273540687 783321829\r\n" + 
				"1 5933845 384358662\r\n" + 
				"1 543628702 372160176\r\n" + 
				"2 136400466 910559291\r\n" + 
				"2 546568738 393221347\r\n" + 
				"1 812227065 694221123\r\n" + 
				"1 311065574 103905420\r\n" + 
				"2 571344361 185289590\r\n" + 
				"1 99638520 173318136\r\n" + 
				"1 854060080 407068012\r\n" + 
				"2 980658213 778573744\r\n" + 
				"2 412539660 476853104\r\n" + 
				"1 530145366 36493537\r\n" + 
				"1 604875364 100141497\r\n" + 
				"2 650812104 64817757\r\n" + 
				"1 141060009 766603553\r\n" + 
				"1 598398952 418245941\r\n" + 
				"1 262344011 431865586\r\n" + 
				"2 56413893 546484833\r\n" + 
				"1 400736735 673588153\r\n" + 
				"1 642955232 803851098\r\n" + 
				"1 917782037 935143105\r\n" + 
				"1 658284524 745224102\r\n" + 
				"1 103202288 501551287\r\n" + 
				"1 162144918 12888783\r\n" + 
				"1 16486753 67467208\r\n" + 
				"1 671120703 941541277\r\n" + 
				"1 47399694 77707668\r\n" + 
				"1 122011395 946116527\r\n" + 
				"1 924363862 886726236\r\n" + 
				"2 657761235 540240467\r\n" + 
				"1 203175991 279882007\r\n" + 
				"2 304620923 162838413\r\n" + 
				"1 440453449 117964712\r\n" + 
				"2 941868853 887850334\r\n" + 
				"1 293198923 466812643\r\n" + 
				"1 461688477 532794906\r\n" + 
				"1 315016797 733095902\r\n" + 
				"1 265008751 913972757\r\n" + 
				"1 887405255 139170948\r\n" + 
				"2 754223230 426836947\r\n" + 
				"1 945967814 852589735\r\n" + 
				"1 168866283 309720694\r\n" + 
				"1 373861145 94596540\r\n" + 
				"2 984122495 20702849\r\n" + 
				"2 233835636 180460242\r\n" + 
				"1 172787631 643823473\r\n" + 
				"1 273611372 616819555\r\n" + 
				"1 196104599 690080895\r\n" + 
				"1 527554061 434103342";
	}
	
}












